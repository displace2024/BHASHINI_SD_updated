# Running on compute-0-7.local
# Started at Sat Feb 11 19:03:02 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/3.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/2.raw exp/displace_dev_sad_tdnn_stats/3.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/3.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.00116372, max-change=0.75, linear-params-rms=0.07029, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.88,0.89,0.91 0.92,0.95,0.99,1.0,1.1 1.1,1.1,1.1,1.1), mean=0.993, stddev=0.0501], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.2,1.2 1.2,1.2,1.2,1.2), mean=1.12, stddev=0.0475], bias-{mean,stddev}=-0.08162,0.9532, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.51e+06, self-repaired-proportion=0.966766, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,3e-06,0.72,1.2 1.5,2.1,2.1,2.7), mean=0.344, stddev=0.553], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0003,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.454, stddev=0.491], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.003,0.01,0.02 0.02,0.02,0.03,0.04), mean=0.00668, stddev=0.00681], oderiv-count=1.45275e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.00116372, max-change=0.75, linear-params-rms=0.03244, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.95,0.95,0.96 0.97,0.98,1.0,1.1,1.1 1.2,1.3,1.4,1.6), mean=1.03, stddev=0.0935], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.44,0.46 0.47,0.48,0.50,0.54,0.57 0.59,0.64,0.72,0.88), mean=0.516, stddev=0.0504], bias-{mean,stddev}=-0.01715,0.9795, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.74e+05, self-repaired-proportion=0.194956, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.004,0.005 0.009,0.02,0.12,0.42,0.64 0.77,1.0,1.5,3.7), mean=0.245, stddev=0.362], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.06,0.07 0.08,0.12,0.29,0.63,0.75 0.84,0.95,0.99,1.0), mean=0.358, stddev=0.255], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.004,0.005 0.007,0.009,0.01,0.02), mean=0.00303, stddev=0.00206], oderiv-count=501120
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.00116372, max-change=0.75, linear-params-rms=0.03102, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.94,0.96 0.96,0.97,0.99,1.0,1.0 1.0,1.0,1.0,1.1), mean=0.992, stddev=0.0237], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.43,0.45,0.46 0.47,0.48,0.49,0.51,0.52 0.53,0.55,0.56,0.62), mean=0.495, stddev=0.0231], bias-{mean,stddev}=0.03684,0.9209, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.79e+05, self-repaired-proportion=0.14109, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.01,0.02,0.03 0.05,0.10,0.30,0.71,0.97 1.4,1.7,2.0,2.6), mean=0.445, stddev=0.446], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.09,0.12 0.18,0.23,0.45,0.71,0.81 0.88,0.92,0.94,0.97), mean=0.479, stddev=0.236], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.001,0.002,0.002 0.003,0.003,0.004,0.006), mean=0.00157, stddev=0.000636], oderiv-count=476352
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.00116372, max-change=0.75, linear-params-rms=0.02777, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.97,0.98,0.99,1.0,1.0 1.0,1.0,1.0,1.1), mean=0.994, stddev=0.022], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.40,0.41 0.42,0.43,0.44,0.46,0.47 0.48,0.48,0.49,0.51), mean=0.443, stddev=0.0196], bias-{mean,stddev}=-0.04711,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=3.19e+05, self-repaired-proportion=0.17478, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.01,0.01,0.02 0.04,0.08,0.32,0.93,1.3 1.7,2.1,2.4,3.2), mean=0.523, stddev=0.574], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.08 0.14,0.20,0.49,0.76,0.90 0.96,0.99,1.0,1.0), mean=0.489, stddev=0.272], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.003,0.003 0.003,0.005,0.005,0.006), mean=0.00209, stddev=0.000835], oderiv-count=346800
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.00116372, max-change=0.75, linear-params-rms=0.02772, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,0.96 0.96,0.97,0.99,1.0,1.0 1.0,1.0,1.1,1.1), mean=0.992, stddev=0.0236], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.40,0.40,0.41 0.42,0.43,0.44,0.46,0.47 0.48,0.49,0.49,0.51), mean=0.443, stddev=0.0199], bias-{mean,stddev}=-0.07483,0.8839, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=7.64e+04, self-repaired-proportion=0.378106, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,6e-07,0.001 0.007,0.02,0.21,1.1,1.9 2.7,3.3,3.6,5.2), mean=0.647, stddev=0.909], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,1e-05,0.008 0.04,0.10,0.41,0.93,1.0 1.0,1.0,1.0,1.0), mean=0.486, stddev=0.355], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-10,3e-10,3e-07,0.0001 0.0005,0.001,0.002,0.005,0.007 0.01,0.01,0.02,0.02), mean=0.00337, stddev=0.00344], oderiv-count=85456
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=0.000116372, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.01838, linear-params-row-norms=[ 0.25 0.32 0.30 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-10,1e-09,1e-06,0.0003 0.001,0.003,0.01,0.04,0.05 0.07,0.08,0.09,0.12), mean=0.0217, stddev=0.0233], bias-{mean,stddev}=-2.111e-08,0.01551, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=91280
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/2.raw exp/displace_dev_sad_tdnn_stats/3.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.35002 tdnn2.affine:1.30303 tdnn3.affine:0.688427 tdnn4.affine:0.76277 tdnn5.affine:0.929078 output.affine:0.0967181 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:22.0298 tdnn2.affine:22.7939 tdnn3.affine:21.628 tdnn4.affine:23.315 tdnn5.affine:21.2941 output.affine:0.510054 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0158384 tdnn2.affine:0.0575473 tdnn3.affine:0.0318359 tdnn4.affine:0.0327356 tdnn5.affine:0.0436227 output.affine:0.191364 ]
# Accounting: time=1 threads=1
# Finished at Sat Feb 11 19:03:03 IST 2023 with status 0
