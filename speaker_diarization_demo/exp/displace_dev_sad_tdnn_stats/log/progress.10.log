# Running on compute-0-1.local
# Started at Sat Feb 11 19:06:47 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/10.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/9.raw exp/displace_dev_sad_tdnn_stats/10.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/10.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.00104516, max-change=0.75, linear-params-rms=0.07193, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.88,0.90,0.92 0.93,0.97,1.0,1.1,1.1 1.1,1.2,1.2,1.7), mean=1.01, stddev=0.0784], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.0,1.0,1.1 1.1,1.1,1.1,1.2,1.2 1.2,1.3,1.3,1.3), mean=1.15, stddev=0.0545], bias-{mean,stddev}=-0.0773,0.9022, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.75e+06, self-repaired-proportion=0.898753, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0007,0.66,1.2 1.4,2.0,2.1,2.6), mean=0.317, stddev=0.527], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.45, stddev=0.486], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.004,0.02,0.02 0.03,0.04,0.04,0.06), mean=0.00931, stddev=0.0104], oderiv-count=1.41613e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.00104516, max-change=0.75, linear-params-rms=0.03546, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.96,0.96,0.97 0.99,0.99,1.0,1.2,1.3 1.5,1.6,2.2,2.5), mean=1.11, stddev=0.223], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.45,0.46 0.47,0.49,0.52,0.62,0.68 0.76,0.86,0.99,1.2), mean=0.556, stddev=0.105], bias-{mean,stddev}=-0.01719,0.9795, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.82e+05, self-repaired-proportion=0.0911957, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.005,0.007 0.01,0.02,0.05,0.20,0.59 0.92,1.2,2.5,5.7), mean=0.21, stddev=0.511], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.07 0.09,0.12,0.22,0.49,0.77 0.92,0.93,0.94,1.0), mean=0.32, stddev=0.251], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.003,0.005 0.009,0.01,0.01,0.02), mean=0.00303, stddev=0.00264], oderiv-count=486144
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.00104516, max-change=0.75, linear-params-rms=0.03131, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.96,0.96 0.97,0.98,1.0,1.0,1.0 1.0,1.1,1.1,1.2), mean=1, stddev=0.0285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.43,0.45,0.46 0.47,0.48,0.50,0.52,0.53 0.55,0.57,0.60,0.74), mean=0.499, stddev=0.0298], bias-{mean,stddev}=0.03692,0.9208, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.41e+05, self-repaired-proportion=0.0379788, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.05,0.07,0.25,0.66,1.2 1.6,2.4,2.6,4.7), mean=0.465, stddev=0.599], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.10,0.13 0.18,0.25,0.44,0.77,0.86 0.91,0.93,0.94,0.95), mean=0.494, stddev=0.25], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.0009 0.001,0.001,0.001,0.002,0.002 0.003,0.004,0.005,0.005), mean=0.00153, stddev=0.000768], oderiv-count=483264
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.00104516, max-change=0.75, linear-params-rms=0.02817, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.94,0.95,0.96 0.97,0.98,1.0,1.0,1.0 1.1,1.1,1.1,1.3), mean=1.01, stddev=0.0364], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.41,0.41 0.42,0.43,0.45,0.47,0.48 0.49,0.51,0.52,0.59), mean=0.449, stddev=0.0237], bias-{mean,stddev}=-0.04718,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=3.24e+05, self-repaired-proportion=0.0354388, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.02,0.02,0.03 0.03,0.06,0.32,0.98,1.4 1.8,2.5,2.7,3.7), mean=0.567, stddev=0.642], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.08,0.09,0.12 0.14,0.19,0.44,0.80,0.89 0.92,0.94,0.94,0.96), mean=0.486, stddev=0.283], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.001,0.001 0.001,0.001,0.002,0.003,0.003 0.004,0.005,0.005,0.009), mean=0.00214, stddev=0.00103], oderiv-count=309200
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.00104516, max-change=0.75, linear-params-rms=0.02796, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.94,0.95 0.96,0.97,0.99,1.0,1.0 1.1,1.1,1.1,1.3), mean=1, stddev=0.0415], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.40,0.41 0.42,0.43,0.45,0.46,0.48 0.49,0.50,0.51,0.56), mean=0.447, stddev=0.0235], bias-{mean,stddev}=-0.07467,0.884, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=6.09e+04, self-repaired-proportion=0.177424, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.01 0.02,0.04,0.18,0.85,1.7 2.5,3.3,3.6,6.5), mean=0.6, stddev=0.914], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.04,0.06,0.08 0.09,0.15,0.36,0.89,0.98 1.0,1.0,1.0,1.0), mean=0.48, stddev=0.336], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.0003,0.0004,0.0005 0.0007,0.001,0.003,0.006,0.008 0.01,0.01,0.02,0.03), mean=0.00389, stddev=0.0042], oderiv-count=96096
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=0.000104516, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.02278, linear-params-row-norms=[ 0.35 0.38 0.35 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,0.0002,0.0005,0.001 0.002,0.006,0.02,0.05,0.06 0.08,0.09,0.12,0.17), mean=0.0278, stddev=0.028], bias-{mean,stddev}=-1.555e-07,0.01792, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=91952
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/9.raw exp/displace_dev_sad_tdnn_stats/10.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.519496 tdnn2.affine:1.30069 tdnn3.affine:0.581431 tdnn4.affine:0.561977 tdnn5.affine:0.77258 output.affine:0.0688377 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:21.7468 tdnn2.affine:23.9389 tdnn3.affine:21.7378 tdnn4.affine:23.4697 tdnn5.affine:21.3965 output.affine:0.631991 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0238876 tdnn2.affine:0.0548931 tdnn3.affine:0.0267838 tdnn4.affine:0.0239766 tdnn5.affine:0.0361667 output.affine:0.112096 ]
# Accounting: time=1 threads=1
# Finished at Sat Feb 11 19:06:48 IST 2023 with status 0
