# Running on compute-0-2.local
# Started at Sat Feb 11 20:04:01 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/117.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/116.raw exp/displace_dev_sad_tdnn_stats/117.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/117.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.000197366, max-change=0.75, linear-params-rms=0.1012, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.89,0.91,0.92 0.95,0.99,1.1,1.8,1.9 2.1,2.2,2.6,3.8), mean=1.36, stddev=0.448], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.4 1.4,1.5,1.6,1.7,1.8 2.0,2.1,2.2,2.4), mean=1.61, stddev=0.183], bias-{mean,stddev}=-0.0604,0.7061, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.73e+06, self-repaired-proportion=0.673255, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.40,0.85 1.1,1.7,1.7,2.3), mean=0.222, stddev=0.416], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.12,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.432, stddev=0.452], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.006,0.006,0.006 0.007,0.007,0.009,0.07,0.08 0.09,0.10,0.10,0.13), mean=0.0366, stddev=0.0332], oderiv-count=1.45101e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000197366, max-change=0.75, linear-params-rms=0.07397, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,1.0,1.0,1.1 1.1,1.2,1.5,2.8,3.6 4.6,6.0,6.3,6.5), mean=2.04, stddev=1.21], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.45,0.47 0.48,0.49,0.53,1.6,1.8 2.0,2.3,2.7,3.2), mean=1.01, stddev=0.61], bias-{mean,stddev}=-0.0171,0.9793, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=4.78e+05, self-repaired-proportion=0.00643609, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.009,0.01,0.01,0.02 0.02,0.04,0.15,0.47,1.1 1.9,3.2,4.9,6.3), mean=0.451, stddev=0.886], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.08 0.12,0.15,0.31,0.57,0.76 0.89,0.92,0.93,0.95), mean=0.368, stddev=0.241], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.003,0.003,0.004,0.009,0.01 0.02,0.02,0.02,0.03), mean=0.00647, stddev=0.00485], oderiv-count=450432
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000197366, max-change=0.75, linear-params-rms=0.04149, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,1.0,1.0,1.0 1.1,1.1,1.3,1.5,1.6 1.7,1.8,2.0,2.2), mean=1.31, stddev=0.229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.47,0.47,0.48 0.49,0.50,0.54,0.71,0.89 1.1,1.3,1.4,1.8), mean=0.628, stddev=0.21], bias-{mean,stddev}=0.03725,0.9208, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.05e+05, self-repaired-proportion=1.03471e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.08 0.11,0.20,0.69,1.4,1.8 2.9,3.4,3.7,5.3), mean=0.913, stddev=0.872], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.09,0.12,0.13 0.18,0.23,0.42,0.63,0.72 0.78,0.82,0.84,0.86), mean=0.436, stddev=0.202], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.008,0.008,0.01,0.01), mean=0.00469, stddev=0.00167], oderiv-count=486144
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.000197366, max-change=0.75, linear-params-rms=0.03882, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,1.0,1.0,1.0 1.1,1.1,1.3,1.6,1.7 1.8,2.1,2.3,2.5), mean=1.36, stddev=0.27], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.43,0.45 0.46,0.48,0.58,0.71,0.79 0.87,0.97,1.1,1.4), mean=0.604, stddev=0.141], bias-{mean,stddev}=-0.04736,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=2.79e+05, self-repaired-proportion=2.91206e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.07,0.09 0.13,0.22,0.65,1.2,1.6 1.9,2.1,2.4,3.9), mean=0.765, stddev=0.603], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.12,0.14 0.16,0.24,0.40,0.61,0.69 0.77,0.85,0.86,0.88), mean=0.428, stddev=0.2], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.005,0.005 0.006,0.007,0.009,0.01,0.01 0.01,0.02,0.02,0.02), mean=0.00913, stddev=0.00278], oderiv-count=319467
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.000197366, max-change=0.75, linear-params-rms=0.03984, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.95,0.96,0.99 1.0,1.0,1.2,1.7,2.0 2.2,2.4,2.5,2.7), mean=1.36, stddev=0.416], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.44,0.46 0.47,0.50,0.61,0.73,0.79 0.83,0.92,0.99,1.3), mean=0.625, stddev=0.128], bias-{mean,stddev}=-0.07543,0.8846, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=6.13e+04, self-repaired-proportion=0.00188178, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.05,0.12,0.33,0.72,1.0 1.2,1.5,2.0,2.7), mean=0.461, stddev=0.435], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.08 0.12,0.18,0.37,0.56,0.67 0.75,0.82,0.84,0.92), mean=0.38, stddev=0.208], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.0005,0.0007,0.002 0.003,0.005,0.02,0.03,0.04 0.04,0.05,0.05,0.06), mean=0.019, stddev=0.0135], oderiv-count=94154.7
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=1.97366e-05, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.0804, linear-params-row-norms=[ 1.6 1.5 0.49 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.008,0.02 0.03,0.05,0.10,0.18,0.23 0.26,0.28,0.29,0.34), mean=0.118, stddev=0.074], bias-{mean,stddev}=-1.378e-06,0.06522, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=86762.7
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/116.raw exp/displace_dev_sad_tdnn_stats/117.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.107127 tdnn2.affine:0.253495 tdnn3.affine:0.146292 tdnn4.affine:0.225577 tdnn5.affine:0.324078 output.affine:0.017526 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:25.4955 tdnn2.affine:40.9073 tdnn3.affine:25.8063 tdnn4.affine:27.9978 tdnn5.affine:26.8763 output.affine:2.2309 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.00420423 tdnn2.affine:0.00620297 tdnn3.affine:0.00567249 tdnn4.affine:0.00806314 tdnn5.affine:0.012069 output.affine:0.00789504 ]
# Accounting: time=0 threads=1
# Finished at Sat Feb 11 20:04:01 IST 2023 with status 0
