# Running on compute-0-0.local
# Started at Sat Feb 11 19:11:02 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/18.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/17.raw exp/displace_dev_sad_tdnn_stats/18.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/18.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.000924374, max-change=0.75, linear-params-rms=0.0753, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.89,0.90,0.92 0.94,0.98,1.0,1.1,1.2 1.2,1.3,1.3,2.7), mean=1.05, stddev=0.152], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.1,1.1,1.1 1.1,1.1,1.2,1.3,1.3 1.3,1.4,1.4,1.5), mean=1.2, stddev=0.0831], bias-{mean,stddev}=-0.07455,0.8633, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.7e+06, self-repaired-proportion=0.872206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0009,0.60,1.1 1.4,2.0,2.0,2.6), mean=0.296, stddev=0.505], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.05,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.447, stddev=0.481], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.02,0.03 0.04,0.04,0.05,0.06), mean=0.0124, stddev=0.0123], oderiv-count=1.36904e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000924374, max-change=0.75, linear-params-rms=0.04148, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,0.97,0.98,0.98 1.0,1.0,1.1,1.3,1.8 2.2,2.8,3.1,4.2), mean=1.25, stddev=0.447], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.45,0.46 0.47,0.49,0.52,0.77,0.87 0.98,1.2,1.4,1.9), mean=0.63, stddev=0.205], bias-{mean,stddev}=-0.01724,0.9795, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.37e+05, self-repaired-proportion=0.0548694, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.005,0.007 0.009,0.02,0.06,0.22,0.52 0.79,2.0,3.0,4.1), mean=0.226, stddev=0.55], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.08 0.10,0.12,0.23,0.53,0.80 0.88,0.93,0.95,0.99), mean=0.328, stddev=0.253], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.004,0.008 0.009,0.01,0.02,0.03), mean=0.00356, stddev=0.00314], oderiv-count=475200
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000924374, max-change=0.75, linear-params-rms=0.03207, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.95,0.96,0.97 0.98,0.99,1.0,1.0,1.1 1.1,1.1,1.2,1.3), mean=1.03, stddev=0.0475], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.44,0.45,0.46 0.47,0.48,0.50,0.52,0.55 0.59,0.64,0.72,1.1), mean=0.51, stddev=0.0512], bias-{mean,stddev}=0.03711,0.9207, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.07e+05, self-repaired-proportion=0.0156084, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.03 0.04,0.08,0.32,0.97,1.4 2.2,2.9,3.4,6.5), mean=0.605, stddev=0.805], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.08,0.09 0.12,0.18,0.47,0.76,0.88 0.90,0.91,0.92,0.93), mean=0.475, stddev=0.273], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0008,0.0009,0.0009 0.001,0.001,0.001,0.002,0.003 0.003,0.005,0.006,0.008), mean=0.00173, stddev=0.000989], oderiv-count=454464
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.000924374, max-change=0.75, linear-params-rms=0.02907, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.96,0.96,0.97 0.98,0.99,1.0,1.1,1.1 1.2,1.3,1.3,1.5), mean=1.04, stddev=0.0721], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.41,0.42 0.43,0.44,0.45,0.48,0.51 0.54,0.57,0.60,0.71), mean=0.463, stddev=0.0374], bias-{mean,stddev}=-0.04705,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=2.69e+05, self-repaired-proportion=0.0113478, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.07,0.40,1.1,1.5 2.1,2.4,2.5,3.3), mean=0.647, stddev=0.666], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.09 0.10,0.15,0.47,0.81,0.90 0.92,0.93,0.93,0.94), mean=0.475, stddev=0.302], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.003,0.004 0.005,0.006,0.007,0.01), mean=0.00268, stddev=0.00139], oderiv-count=308400
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.000924374, max-change=0.75, linear-params-rms=0.0288, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.94,0.95 0.96,0.98,1.0,1.0,1.1 1.2,1.3,1.4,1.5), mean=1.03, stddev=0.0853], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.41,0.42 0.42,0.43,0.45,0.48,0.50 0.52,0.56,0.59,0.81), mean=0.459, stddev=0.0364], bias-{mean,stddev}=-0.07462,0.8844, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=6.12e+04, self-repaired-proportion=0.123845, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.009,0.01,0.01 0.02,0.04,0.25,1.1,1.8 2.6,3.0,3.5,7.0), mean=0.654, stddev=0.925], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.05,0.05,0.07 0.09,0.13,0.37,0.91,0.94 1.0,1.0,1.0,1.0), mean=0.482, stddev=0.344], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0004,0.0006,0.0007 0.0009,0.001,0.003,0.008,0.01 0.01,0.02,0.02,0.03), mean=0.00507, stddev=0.00499], oderiv-count=94192
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=9.24374e-05, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.0266, linear-params-row-norms=[ 0.42 0.47 0.38 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.001,0.002,0.003 0.005,0.008,0.03,0.06,0.07 0.10,0.11,0.13,0.17), mean=0.0344, stddev=0.0306], bias-{mean,stddev}=-2.801e-07,0.02433, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=86352
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/17.raw exp/displace_dev_sad_tdnn_stats/18.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.397933 tdnn2.affine:1.02078 tdnn3.affine:0.515615 tdnn4.affine:0.521478 tdnn5.affine:0.797819 output.affine:0.0722114 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:21.9239 tdnn2.affine:26.3443 tdnn3.affine:22.0231 tdnn4.affine:23.8279 tdnn5.affine:21.7633 output.affine:0.738381 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0181665 tdnn2.affine:0.0391431 tdnn3.affine:0.0234554 tdnn4.affine:0.0219254 tdnn5.affine:0.036737 output.affine:0.0985764 ]
# Accounting: time=0 threads=1
# Finished at Sat Feb 11 19:11:02 IST 2023 with status 0
