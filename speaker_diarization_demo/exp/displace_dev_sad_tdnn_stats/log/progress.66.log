# Running on compute-0-1.local
# Started at Sat Feb 11 19:38:16 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/66.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/65.raw exp/displace_dev_sad_tdnn_stats/66.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/66.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.000483531, max-change=0.75, linear-params-rms=0.09254, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.89,0.91,0.92 0.95,0.98,1.1,1.5,1.6 1.8,1.9,2.3,3.6), mean=1.26, stddev=0.353], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.3 1.3,1.3,1.4,1.6,1.7 1.8,1.9,2.0,2.2), mean=1.47, stddev=0.168], bias-{mean,stddev}=-0.06464,0.7461, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.65e+06, self-repaired-proportion=0.716935, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.44,0.91 1.2,1.7,1.8,2.4), mean=0.24, stddev=0.439], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.09,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.435, stddev=0.462], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.004,0.005,0.007,0.05,0.06 0.07,0.07,0.08,0.08), mean=0.026, stddev=0.0241], oderiv-count=1.42589e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000483531, max-change=0.75, linear-params-rms=0.0653, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,1.0,1.0,1.0 1.1,1.1,1.3,2.3,3.3 3.9,5.2,5.9,6.0), mean=1.8, stddev=1.06], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.45,0.46 0.48,0.49,0.53,1.4,1.6 1.7,2.0,2.5,2.9), mean=0.91, stddev=0.509], bias-{mean,stddev}=-0.01714,0.9793, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=4.2e+05, self-repaired-proportion=0.00727007, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.006,0.007,0.008,0.01 0.02,0.03,0.10,0.44,1.0 1.9,3.5,4.9,6.0), mean=0.412, stddev=0.889], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.09 0.11,0.13,0.27,0.55,0.78 0.89,0.93,0.94,0.95), mean=0.347, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.002 0.002,0.002,0.003,0.006,0.009 0.01,0.02,0.02,0.02), mean=0.00437, stddev=0.00376], oderiv-count=511027
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000483531, max-change=0.75, linear-params-rms=0.03793, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.98,0.99,1.0 1.0,1.0,1.2,1.3,1.4 1.5,1.6,1.7,2.0), mean=1.2, stddev=0.172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.46,0.46,0.47 0.48,0.50,0.52,0.62,0.76 0.92,1.2,1.3,1.6), mean=0.583, stddev=0.163], bias-{mean,stddev}=0.0373,0.9209, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.46e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.04,0.05 0.08,0.16,0.66,1.4,1.9 2.8,3.7,4.2,5.2), mean=0.883, stddev=0.909], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.09,0.12 0.15,0.21,0.46,0.67,0.79 0.84,0.85,0.86,0.91), mean=0.454, stddev=0.23], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.004,0.005 0.005,0.006,0.007,0.007), mean=0.0028, stddev=0.00126], oderiv-count=443290
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.000483531, max-change=0.75, linear-params-rms=0.03494, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.99,1.0,1.0 1.0,1.1,1.2,1.4,1.5 1.6,1.8,2.1,2.2), mean=1.23, stddev=0.218], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.42,0.43,0.44 0.45,0.46,0.52,0.62,0.69 0.76,0.86,0.91,1.2), mean=0.547, stddev=0.109], bias-{mean,stddev}=-0.04716,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=3e+05, self-repaired-proportion=0.000319693, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.06 0.09,0.18,0.65,1.4,1.8 2.1,2.3,2.4,3.9), mean=0.813, stddev=0.687], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.08,0.10 0.14,0.21,0.44,0.69,0.77 0.83,0.86,0.88,0.93), mean=0.451, stddev=0.233], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.004,0.006,0.007 0.008,0.01,0.01,0.02), mean=0.00469, stddev=0.00197], oderiv-count=349760
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.000483531, max-change=0.75, linear-params-rms=0.03545, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.94,0.97,0.98 0.99,1.0,1.1,1.4,1.7 1.9,2.1,2.2,2.4), mean=1.23, stddev=0.31], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.42,0.43,0.44 0.45,0.47,0.53,0.64,0.69 0.74,0.81,0.88,1.1), mean=0.558, stddev=0.102], bias-{mean,stddev}=-0.07502,0.8846, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=5.75e+04, self-repaired-proportion=0.023337, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.09,0.44,1.2,1.6 2.1,2.5,2.8,5.1), mean=0.692, stddev=0.738], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.08 0.11,0.17,0.40,0.77,0.85 0.88,0.92,0.98,0.99), mean=0.456, stddev=0.281], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.0003,0.0004,0.001 0.002,0.003,0.008,0.02,0.02 0.03,0.03,0.03,0.04), mean=0.00995, stddev=0.00807], oderiv-count=91481.6
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=4.83531e-05, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.05268, linear-params-row-norms=[ 0.99 0.98 0.44 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.004,0.009 0.02,0.03,0.06,0.12,0.16 0.18,0.20,0.20,0.25), mean=0.0753, stddev=0.0516], bias-{mean,stddev}=-1.199e-06,0.04423, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=93452.8
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/65.raw exp/displace_dev_sad_tdnn_stats/66.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.244754 tdnn2.affine:0.534204 tdnn3.affine:0.279418 tdnn4.affine:0.391552 tdnn5.affine:0.564032 output.affine:0.0413154 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:24.0783 tdnn2.affine:36.8505 tdnn3.affine:24.3344 tdnn4.affine:26.2745 tdnn5.affine:24.7761 output.affine:1.46202 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0101839 tdnn2.affine:0.0145446 tdnn3.affine:0.0115016 tdnn4.affine:0.0149282 tdnn5.affine:0.0228152 output.affine:0.0285634 ]
# Accounting: time=0 threads=1
# Finished at Sat Feb 11 19:38:16 IST 2023 with status 0
