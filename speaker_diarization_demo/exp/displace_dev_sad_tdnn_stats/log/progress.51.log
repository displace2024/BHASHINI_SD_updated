# Running on compute-0-4.local
# Started at Sat Feb 11 19:30:01 IST 2023
# nnet3-info exp/displace_dev_sad_tdnn_stats/51.raw && nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/50.raw exp/displace_dev_sad_tdnn_stats/51.raw 
nnet3-info exp/displace_dev_sad_tdnn_stats/51.raw 
left-context: 24
right-context: 46
num-parameters: 1229878
modulus: 18
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2)) input-dim=200 output-dim=200
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=200 output-dim=255
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=255 output-dim=255
component-node name=tdnn1.renorm component=tdnn1.renorm input=tdnn1.relu input-dim=255 output-dim=256
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.renorm, -1), tdnn1.renorm, Offset(tdnn1.renorm, 1), Offset(tdnn1.renorm, 2)) input-dim=1024 output-dim=255
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=255 output-dim=255
component-node name=tdnn2.renorm component=tdnn2.renorm input=tdnn2.relu input-dim=255 output-dim=256
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(tdnn2.renorm, -3), tdnn2.renorm, Offset(tdnn2.renorm, 3), Offset(tdnn2.renorm, 6)) input-dim=1024 output-dim=255
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=255 output-dim=255
component-node name=tdnn3.renorm component=tdnn3.renorm input=tdnn3.relu input-dim=255 output-dim=256
component-node name=tdnn3_stats-extraction-99-99 component=tdnn3_stats-extraction-99-99 input=tdnn3.renorm input-dim=256 output-dim=257
component-node name=tdnn3_stats-pooling-99-99 component=tdnn3_stats-pooling-99-99 input=tdnn3_stats-extraction-99-99 input-dim=257 output-dim=257
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.renorm, -6), tdnn3.renorm, Offset(tdnn3.renorm, 6), Offset(tdnn3.renorm, 12), Round(tdnn3_stats-pooling-99-99, 9)) input-dim=1281 output-dim=255
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=255 output-dim=255
component-node name=tdnn4.renorm component=tdnn4.renorm input=tdnn4.relu input-dim=255 output-dim=256
component-node name=tdnn4_stats-extraction-108-108 component=tdnn4_stats-extraction-108-108 input=tdnn4.renorm input-dim=256 output-dim=257
component-node name=tdnn4_stats-pooling-108-108 component=tdnn4_stats-pooling-108-108 input=tdnn4_stats-extraction-108-108 input-dim=257 output-dim=257
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(tdnn4.renorm, -12), tdnn4.renorm, Offset(tdnn4.renorm, 12), Offset(tdnn4.renorm, 24), Round(tdnn4_stats-pooling-108-108, 18)) input-dim=1281 output-dim=256
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=256 output-dim=256
component-node name=tdnn5.renorm component=tdnn5.renorm input=tdnn5.relu input-dim=256 output-dim=256
component-node name=output.affine component=output.affine input=tdnn5.renorm input-dim=256 output-dim=3
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=3 output-dim=3
output-node name=output input=output.log-softmax dim=3 objective=linear
component name=lda type=FixedAffineComponent, input-dim=200, output-dim=200, linear-params-rms=0.001715, bias-{mean,stddev}=0.004393,0.07185
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=200, output-dim=255, learning-rate=0.000644799, max-change=0.75, linear-params-rms=0.08822, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.89,0.90,0.92 0.95,0.98,1.1,1.4,1.5 1.6,1.8,2.0,3.5), mean=1.21, stddev=0.306], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.3,1.4,1.5,1.6 1.7,1.8,1.9,2.1), mean=1.4, stddev=0.155], bias-{mean,stddev}=-0.06668,0.7687, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=1.58e+06, self-repaired-proportion=0.739409, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.47,0.95 1.2,1.8,1.8,2.4), mean=0.25, stddev=0.452], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.08,1.0,1.0 1.0,1.0,1.0,1.0), mean=0.437, stddev=0.466], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.004,0.004 0.004,0.004,0.006,0.04,0.05 0.06,0.06,0.07,0.07), mean=0.0223, stddev=0.0209], oderiv-count=1.49147e+06
component name=tdnn1.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000644799, max-change=0.75, linear-params-rms=0.06044, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.0,1.0,1.0 1.0,1.1,1.3,2.1,3.0 3.6,4.7,5.5,5.6), mean=1.68, stddev=0.953], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.43,0.45,0.46 0.48,0.49,0.52,1.3,1.4 1.6,1.9,2.3,2.8), mean=0.853, stddev=0.451], bias-{mean,stddev}=-0.01719,0.9793, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=5.43e+05, self-repaired-proportion=0.0151427, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.006,0.009 0.01,0.02,0.08,0.40,0.81 1.8,3.5,4.6,5.9), mean=0.376, stddev=0.845], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.08 0.09,0.13,0.24,0.51,0.79 0.90,0.93,0.94,0.96), mean=0.329, stddev=0.251], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.005,0.008 0.01,0.01,0.02,0.02), mean=0.00385, stddev=0.00346], oderiv-count=430848
component name=tdnn2.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=1024, output-dim=255, learning-rate=0.000644799, max-change=0.75, linear-params-rms=0.03631, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,0.98,0.99 1.0,1.0,1.1,1.2,1.3 1.4,1.5,1.6,1.9), mean=1.15, stddev=0.143], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.45,0.46,0.47 0.48,0.49,0.52,0.59,0.70 0.83,1.0,1.1,1.6), mean=0.563, stddev=0.137], bias-{mean,stddev}=0.03726,0.9208, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=4.53e+05, self-repaired-proportion=5.43154e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.03,0.04 0.06,0.14,0.61,1.4,1.8 2.7,3.6,4.2,5.1), mean=0.846, stddev=0.895], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.10 0.13,0.20,0.48,0.70,0.81 0.86,0.88,0.89,0.92), mean=0.464, stddev=0.245], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.003,0.004 0.005,0.005,0.006,0.007), mean=0.0023, stddev=0.00115], oderiv-count=460339
component name=tdnn3.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn3_stats-extraction-99-99 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn3_stats-pooling-99-99 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=255, learning-rate=0.000644799, max-change=0.75, linear-params-rms=0.0333, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.98,0.99,1.0 1.0,1.0,1.1,1.3,1.4 1.6,1.7,1.8,2.1), mean=1.18, stddev=0.186], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.42,0.42,0.43 0.44,0.45,0.50,0.58,0.65 0.71,0.80,0.86,1.1), mean=0.524, stddev=0.093], bias-{mean,stddev}=-0.04709,1.068, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=255, self-repair-scale=1e-05, count=3.38e+05, self-repaired-proportion=0.00323799, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.04,0.05 0.06,0.14,0.60,1.6,1.9 2.1,2.3,2.5,3.6), mean=0.823, stddev=0.723], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.07,0.07,0.09 0.11,0.18,0.45,0.73,0.81 0.86,0.88,0.90,0.95), mean=0.462, stddev=0.252], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.004,0.005 0.006,0.009,0.01,0.01), mean=0.00358, stddev=0.0017], oderiv-count=340160
component name=tdnn4.renorm type=NormalizeComponent, input-dim=255, output-dim=256, target-rms=1, add-log-stddev=true
component name=tdnn4_stats-extraction-108-108 type=StatisticsExtractionComponent, input-dim=256, output-dim=257
component name=tdnn4_stats-pooling-108-108 type=StatisticsPoolingComponent, input-dim=257, output-dim=257
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=1281, output-dim=256, learning-rate=0.000644799, max-change=0.75, linear-params-rms=0.03351, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,0.94,0.96,0.97 0.99,1.0,1.1,1.3,1.6 1.8,1.9,2.0,2.3), mean=1.17, stddev=0.255], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.41,0.42,0.43 0.44,0.46,0.51,0.59,0.64 0.69,0.76,0.82,1.1), mean=0.529, stddev=0.0871], bias-{mean,stddev}=-0.07489,0.8846, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=256, self-repair-scale=1e-05, count=6.16e+04, self-repaired-proportion=0.0490376, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.02 0.04,0.07,0.44,1.3,1.9 2.5,2.8,3.2,6.5), mean=0.75, stddev=0.877], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.07 0.09,0.16,0.40,0.84,0.90 0.92,0.97,1.0,1.0), mean=0.471, stddev=0.308], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.0003,0.0005,0.0007 0.001,0.002,0.006,0.01,0.02 0.02,0.02,0.03,0.03), mean=0.00783, stddev=0.00663], oderiv-count=101158
component name=tdnn5.renorm type=NormalizeComponent, input-dim=256, output-dim=256, target-rms=1, add-log-stddev=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=256, output-dim=3, learning-rate=6.44799e-05, learning-rate-factor=0.1, max-change=1.5, linear-params-rms=0.04391, linear-params-row-norms=[ 0.81 0.80 0.43 ], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.004,0.006 0.01,0.02,0.05,0.10,0.13 0.14,0.17,0.19,0.22), mean=0.0618, stddev=0.0443], bias-{mean,stddev}=-9.981e-07,0.03883, rank-in=20, rank-out=2, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=3, oderiv-rms=[ 0.25 0.97 0 ], oderiv-count=87718.4
nnet3-show-progress --use-gpu=no exp/displace_dev_sad_tdnn_stats/50.raw exp/displace_dev_sad_tdnn_stats/51.raw 
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:SelectGpuId():cu-device.cc:168) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:0.311345 tdnn2.affine:0.659075 tdnn3.affine:0.332107 tdnn4.affine:0.429556 tdnn5.affine:0.623343 output.affine:0.0495672 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:23.4246 tdnn2.affine:34.6173 tdnn3.affine:23.6814 tdnn4.affine:25.5713 tdnn5.affine:23.8738 output.affine:1.21877 ]
LOG (nnet3-show-progress[5.5.1060~1-ae8cb]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.0133223 tdnn2.affine:0.0191515 tdnn3.affine:0.014053 tdnn4.affine:0.0168322 tdnn5.affine:0.0261804 output.affine:0.0411314 ]
# Accounting: time=0 threads=1
# Finished at Sat Feb 11 19:30:01 IST 2023 with status 0
